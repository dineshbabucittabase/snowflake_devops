name: Deploy data pipeline

# Action will run on pushes to selected branches
on:
  push:
    branches:
      - dev

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-dev:
    runs-on: ubuntu-22.04

    env:
      REPO_NAME: "quickstart_common.public.snowflake_devops_git_repo"
      # Read connection secrets
      SNOWFLAKE_CONNECTIONS_DEFAULT_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_DATABASE: quickstart_common
      SNOWFLAKE_CONNECTIONS_DEFAULT_SCHEMA: public 
      SNOWFLAKE_CONNECTIONS_DEFAULT_WAREHOUSE: COMPUTE_WH
 
    steps:
      # Checkout step is necessary if you want to use a config file from your repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Snowflake CLI GitHub Action and point to config file
      - name: Install snowflake-cli
        uses: Snowflake-Labs/snowflake-cli-action@v1.5
        with:
          cli-version: "latest"
          default-config-file-path: "config.toml"

      # Update Snowflake's copy of the repository
      - name: Fetch repository changes
        run: snow git fetch "${REPO_NAME}"

      # Deploy pipeline with branch specific parameters
      - name: Deploy data pipeline to dev
        run: |
          BRANCH_NAME=dev
          if [ "${BRANCH_NAME}" == "prod" ]; then
            RETENTION_TIME=1
          else
            RETENTION_TIME=0
          fi
          snow git execute \
            "@${REPO_NAME}/branches/dev/scripts/0[134]_*" \
            -D "environment='dev'" \
            -D "retention_time=${RETENTION_TIME}"

  manual-approval:
    name: Manual Approval
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: success() 

    permissions:
      issues: write
          
    steps:
      - name: Await Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: dineshbabucittabase # Replace with GitHub usernames, with the free version you can only have an issue assigned to one username
          minimum-approvals: 1
          issue-title: "Manual Approval Required for Production Deployment"
          issue-body: "Please approve or deny the deployment."

  merge-branch:
    needs: manual-approval    
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: everlytic/branch-merge@1.1.2
        with:
          github_token: ${{ github.token }}
          source_ref: ${{ github.ref }}
          target_branch: 'prod'
          commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}'

  deploy-prod:
    needs: merge-branch
    runs-on: ubuntu-22.04

    env:
      REPO_NAME: "quickstart_common.public.snowflake_devops_git_repo"
      # Read connection secrets
      SNOWFLAKE_CONNECTIONS_DEFAULT_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_CONNECTIONS_DEFAULT_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}  
      SNOWFLAKE_CONNECTIONS_DEFAULT_DATABASE: quickstart_common
      SNOWFLAKE_CONNECTIONS_DEFAULT_SCHEMA: public 
      SNOWFLAKE_CONNECTIONS_DEFAULT_WAREHOUSE: COMPUTE_WH         

    steps:
      # Checkout step is necessary if you want to use a config file from your repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Snowflake CLI GitHub Action and point to config file
      - name: Install snowflake-cli
        uses: Snowflake-Labs/snowflake-cli-action@v1.5
        with:
          cli-version: "latest"
          default-config-file-path: "config.toml"

      # Update Snowflake's copy of the repository
      - name: Fetch repository changes
        run: snow git fetch "${REPO_NAME}"

      # Deploy pipeline with branch specific parameters
      - name: Deploy data pipeline to prod
        run: |
          BRANCH_NAME=prod
          if [ "${BRANCH_NAME}" == "prod" ]; then
            RETENTION_TIME=1
          else
            RETENTION_TIME=0
          fi
          snow git execute \
            "@${REPO_NAME}/branches/prod/scripts/0[134]_*" \
            -D "environment='prod'" \
            -D "retention_time=${RETENTION_TIME}"